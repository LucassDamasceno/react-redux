{"version":3,"sources":["store/reducers/formulario.js","store/reducers/index.js","store/index.js","store/actions/formulario.js","components/Formulario/Formulario.js","components/Resultado/Resultado.js","App.js","index.js"],"names":["createStore","require","INITIAL_STATE","nome","sobrenome","formulario","state","action","type","combineReducers","store","rootReducer","enviar","connect","dispatch","bindActionCreators","FormActions","useState","setNome","setSobrenome","className","Card","Input","placeholder","value","onChange","event","target","Button","onClick","form","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAAQA,EAAgBC,EAAQ,GAAxBD,YAEFE,EAAgB,CAClBC,KAAM,KACNC,UAAW,MAGA,SAASC,IAA2C,IAAhCC,EAA+B,uDAAvBJ,EAAeK,EAAQ,uCAC9D,MAAoB,cAAhBA,EAAOC,KACA,CACHL,KAAMI,EAAOJ,KACbC,UAAWG,EAAOH,WAGnBE,EAGGN,EAAaK,GAA3B,ICdeI,4BAAgB,CAC3BJ,eCCWK,EAFDV,sBAAYW,G,wCCHnB,SAASC,EAAOT,EAAMC,GACzB,MAAO,CACHI,KAAM,YACNL,OACAC,aCGR,IAqCeS,eAPS,SAAAP,GAAK,MAAK,CAC9BA,MAAOA,EAAMD,eAGU,SAAAS,GAAQ,OAC/BC,6BAAmBC,EAAaF,KAErBD,EArCI,SAAC,GAAsB,EAApBP,MAAqB,IAAdM,EAAa,EAAbA,OAAa,EACdK,mBAAS,UADK,mBAC/Bd,EAD+B,KACzBe,EADyB,OAEJD,mBAAS,SAFL,mBAE/Bb,EAF+B,KAEpBe,EAFoB,KAItC,OACI,yBAAKC,UAAU,cACX,yBAAKA,UAAU,cAAa,+CAC5B,yBAAKA,UAAU,WACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,QACZ,wBAAIA,UAAU,UAAd,iBACA,kBAACE,EAAA,EAAD,CACIC,YAAY,OACZH,UAAU,QACVI,MAAOrB,EACPsB,SAAU,SAAAC,GAAK,OAAIR,EAAQQ,EAAMC,OAAOH,UAE5C,kBAACF,EAAA,EAAD,CACIC,YAAY,YACZH,UAAU,QACVI,MAAOpB,EACPqB,SAAU,SAAAC,GAAK,OAAIP,EAAaO,EAAMC,OAAOH,UAEjD,kBAACI,EAAA,EAAD,CAAQR,UAAU,OAAOS,QAAS,kBAAMjB,EAAOT,EAAMC,KAArD,gBCTLS,G,MAAAA,aAAQ,SAAAP,GAAK,MAAK,CAC7BwB,KAAMxB,EAAMD,cADDQ,EAhBG,SAAC,GAAD,IAAGiB,EAAH,EAAGA,KAAH,OACd,yBAAKV,UAAU,aACX,yBAAKA,UAAU,cAAa,+CAC5B,wBAAIA,UAAU,UAAd,aAEIU,EAAK3B,MAAQ2B,EAAK1B,UACd,6BACI,iDACA,8BAAO0B,EAAK3B,KAAZ,IAAmB2B,EAAK1B,WACxB,gCACK,U,MCIV2B,MAZf,WAEE,OACE,yBAAKX,UAAU,OACb,kBAAC,IAAD,CAAUV,MAAOA,GACf,kBAAC,EAAD,MACA,kBAAC,EAAD,S,MCNRsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fbb8ab40.chunk.js","sourcesContent":["const { createStore } = require(\"redux\")\r\n\r\nconst INITIAL_STATE = {\r\n    nome: null,\r\n    sobrenome: null\r\n}\r\n\r\nexport default function formulario(state = INITIAL_STATE, action) {\r\n    if (action.type === 'SEND_FORM') {\r\n        return {\r\n            nome: action.nome,\r\n            sobrenome: action.sobrenome\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst store = createStore((formulario))","import { combineReducers } from 'redux'\r\nimport formulario from './formulario'\r\n\r\nexport default combineReducers({\r\n    formulario,\r\n})","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store;","export function enviar(nome, sobrenome) {\r\n    return {\r\n        type: 'SEND_FORM',\r\n        nome,\r\n        sobrenome\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport './Formulario.css'\r\nimport { Input, Card, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as FormActions from '../../store/actions/formulario'\r\n\r\nconst Formulario = ({ state, enviar }) => {\r\n    const [nome, setNome] = useState('Marcos')\r\n    const [sobrenome, setSobrenome] = useState('Sousa')\r\n\r\n    return (\r\n        <div className=\"formulario\">\r\n            <div className=\"compTitulo\"><span>Componente 1</span></div>\r\n            <div className='divCard'>\r\n                <Card className=\"card\">\r\n                    <h1 className=\"titulo\">Formul√°rio</h1>\r\n                    <Input  \r\n                        placeholder='Nome'\r\n                        className=\"input\"\r\n                        value={nome}\r\n                        onChange={event => setNome(event.target.value)}>\r\n                    </Input>\r\n                    <Input\r\n                        placeholder='Sobrenome'\r\n                        className=\"input\"\r\n                        value={sobrenome}\r\n                        onChange={event => setSobrenome(event.target.value)}>\r\n                    </Input>\r\n                    <Button className=\"mt-4\" onClick={() => enviar(nome, sobrenome)}>Enviar</Button>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    state: state.formulario\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    bindActionCreators(FormActions, dispatch)\r\n)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Formulario);","import React from 'react';\r\nimport './Resultado.css'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Resultado = ({ form }) => (\r\n    <div className='resultado'>\r\n        <div className=\"compTitulo\"><span>Componente 2</span></div>\r\n        <h1 className='titulo'>Resultado</h1>\r\n        {\r\n            form.nome && form.sobrenome ?\r\n                <div>\r\n                    <span >Nome completo: </span>\r\n                    <span>{form.nome} {form.sobrenome}</span>\r\n                    <span></span>\r\n                </div> : null\r\n        }\r\n\r\n    </div>\r\n)\r\n\r\nexport default connect(state => ({\r\n    form: state.formulario\r\n}))(Resultado);","import React from 'react';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport Formulario from './components/Formulario/Formulario';\nimport Resultado from './components/Resultado/Resultado';\nimport './App.css'\nfunction App() {\n\n  return (\n    <div className='app'>\n      <Provider store={store}>\n        <Formulario></Formulario>\n        <Resultado></Resultado>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}